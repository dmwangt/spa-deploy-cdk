// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot works correctly 1`] = `
Object {
  "Resources": Object {
    "OAIE1EFC67F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "OAI for my-website website.",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "mysitetest619264D3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "WebsiteConfiguration": Object {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "mysitetestPolicy150DDDE0": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "mysitetest619264D3",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "OAIE1EFC67F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "mysitetest619264D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "mysitetest619264D3",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "OAIE1EFC67F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "mysitetest619264D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "mysitetest619264D3",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "mywebsitebuildB49D4552": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "S3_BUCKET",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "mysitetest619264D3",
              },
            },
            Object {
              "Name": "CLOUDFRONT_DIST_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "mywebsitecfdCFDistribution58CC5904",
              },
            },
          ],
          "Image": "aws/codebuild/standard:3.0",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "my-website-build",
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "mywebsitebuildRole06776304",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "buildspec.yml",
          "Location": "https://github.com/ryands17/react-apollo-linkstate.git",
          "ReportBuildStatus": true,
          "Type": "GITHUB",
        },
        "TimeoutInMinutes": 20,
        "Triggers": Object {
          "FilterGroups": Array [
            Array [
              Object {
                "Pattern": "PUSH, PULL_REQUEST_MERGED",
                "Type": "EVENT",
              },
              Object {
                "Pattern": "^refs/heads/master$",
                "Type": "HEAD_REF",
              },
            ],
          ],
          "Webhook": true,
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "mywebsitebuildRole06776304": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "mywebsitebuildRoleDefaultPolicy9090D456": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "mywebsitebuildB49D4552",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "mywebsitebuildB49D4552",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "mywebsitebuildB49D4552",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:GetObject*",
                "s3:DeleteObject",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "mysitetest619264D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "mysitetest619264D3",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "cloudfront:CreateInvalidation",
                "cloudfront:GetDistribution*",
                "cloudfront:GetInvalidation",
                "cloudfront:ListInvalidations",
                "cloudfront:ListDistributions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "mywebsitebuildRoleDefaultPolicy9090D456",
        "Roles": Array [
          Object {
            "Ref": "mywebsitebuildRole06776304",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "mywebsitecfdCFDistribution58CC5904": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "mysitetest619264D3",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "OAIE1EFC67F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "CloudFrontDefaultCertificate": true,
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
  },
}
`;
